<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js"></script>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

  <!-- ====== TITLE ====== -->
  <title>Refer</title>

  <!-- ====== CSS LINKS ===== -->
  <link rel="stylesheet" href="css/base.css">
    <link rel="stylesheet" href="css/header.css">
    <link rel="stylesheet" href="css/blog.css">
    <link rel="stylesheet" href="css/author.css">
  <link rel="stylesheet" href="sinup_in.css">
  <link rel="stylesheet" href="css/compact.css">
</head>

<body>
    <%- include('./partials/header') %>


  <!-- ======= main ===== -->
  <main style="height: 100%;">
    <div class="row" style="margin-Top: 20px">
      <div class="col-sm-12">
        <table class="table table-striped" id="blog_reads">
          <thead>
            <tr>
              <th>Title</th>
              <th>View Count</th>
              <th>revenue</th>
            </tr>
          </thead>
          <tbody id="count_body">
          </tbody>
        </table>
      </div>
    </div>
  </main>
  <!-- ======= main close ====== -->
<script type="text/javascript" src="js/base_func.js"></script>
<script>
  async function userViews(userId, month, year){
    let response = await fetch(`/getUserReadTimes`, { // Get all blogs that have been read by this user
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        userId: await userId,
        month: month,  //Use month if a specific month is needed
        year: year
      }),
    });
    let reads = await response.json();
    console.log("reads = ", reads);
    let count = 0
    for (read in reads){
      count += 1
    }
    //document.getElementById("read_count").innerHTML = `${count}`
    //document.getElementById("read_amount").innerHTML = `₹ ${count/10}`
  }
  async function blogViews(blogId, month, year){ // Get all readers who have read the blog this month
    let response = await fetch(`/getUserReadTimes`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        blogId: await blogId, //Provide BlogId
        month: month, //Use month if a specific month is needed
        year: year
      }),
    });
    let reads = await response.json();
    console.log("reads = ", reads);
    let count = 0
    analysis = {}
    for (read in reads){ //calculate the numbers of readers
      count += 1
    }
    //document.getElementById("read_count").innerHTML = `${count}`
    //document.getElementById("read_amount").innerHTML = `₹ ${count/10}`
  }

  async function authorViews(userId, month, year){ // Get all readers who have read the blog this month
    let response = await fetch(`/getUserReadTimes`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        author: await userId, //Provide userId
        month: month, //Use month if a specific month is needed
        year: year
      }),
    });
    let reads = await response.json();
    console.log("reads = ", reads);
    let count = 0
    analysis = {}
    for (read in reads){ //calculate the numbers of readers
      count += 1
      if (analysis[reads[read]["blogId"]]==undefined){
        analysis[reads[read]["blogId"]] = 1
      }
      else{
        analysis[reads[read]["blogId"]] += 1
      }
    }
    console.log("analysis = ", analysis)
    
    let tbody=  document.getElementById("count_body")
    for (let i in analysis){
      let td = document.createElement("tr")
      let amount = (analysis[i]%100)*10
      if (analysis[i]<100){
        amount = 0
      }
      td.innerHTML = `
        <td>${i}</td>
        <td>${analysis[i]}</td>
        <td>₹${amount}</td>
      `
      tbody.append(td)
    }
    //document.getElementById("read_count").innerHTML = `${count}`
    //document.getElementById("read_amount").innerHTML = `₹ ${count/10}`
  }

  userViews("f4ffd00c6e64c6273e5c747777dcd9d6788c3ecb2bf70a3b313a23902059c434")
  authorViews("f4ffd00c6e64c6273e5c747777dcd9d6788c3ecb2bf70a3b313a23902059c434")
  blogViews("65041f312427de889c3a08e4")
</script>

</body>

</html>