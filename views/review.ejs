<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review</title>
    <link rel="stylesheet" href="/dist/styles.css">
    <link rel="stylesheet" href="/dist/all.css">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400i,600,600i,700,700i" rel="stylesheet">
    <link rel="stylesheet" href="../css/base.css">
    <link rel="stylesheet" href="../css/header.css">
    <link rel="stylesheet" href="../css/review.css">
</head>
<body>
    <%- include('./partials/header') %>
    <main class="review-main">
        <section class="home_hero_section">
            <div class="container">
                <div class="hero_search_box">
                    <div class="hero_search">
                        <form action="#" class="r-flex ali-c" onsubmit="searchBlogs(); return false;">
                            <input type="search" name="search" class="search_input" id="hero_search" placeholder="Discover Blogs">
                            <button type="submit" class="hero_search_btn">
                                <svg width="24" height="24" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9.5 9.5L12.5 12.5" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                    <path d="M5.75 10.5C8.37335 10.5 10.5 8.37335 10.5 5.75C10.5 3.12665 8.37335 1 5.75 1C3.12665 1 1 3.12665 1 5.75C1 8.37335 3.12665 10.5 5.75 10.5Z" stroke="#ffffff" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                            </button>
                        </form>
                        <select id="filterType" onchange="sortBlogs()">
                            <option value="title">Title</option>
                            <option value="author">Author</option>
                        </select>
                    </div>
                </div>
            </div>
        </section>
    </main>
    
    <div id="in-review"></div>

    <script>
        
        async function publishBlog(id) {
            console.log("id = ", id);
            await publish(id);
        }
    
        async function publish(id) {
            let token = localStorage.getItem("token");
            let data = await fetch("/setReview", {
                method: "POST",
                headers: {
                    "Content-type": "application/json",
                    'Authorization': "Bearer " + token
                },
                body: JSON.stringify({ blogId: id })
            });
    
            let done = await data.status;
            console.log("status = ", done);
    
            if (await done == 200) {
                document.getElementById(id).remove();
                console.log("removed");
            } else {
                console.log("not removed");
            }
        }



        // Function for getting all blogs in the review section
        async function getBlogs() {
            let token = localStorage.getItem("token");
            let data = await fetch("/allReview", {
                method: "POST",
                headers: {
                    "Content-type": "application/json",
                    'Authorization': "Bearer " + token
                }
            });
            
    
            let blogs = await data.json();
            let elem = document.getElementById("in-review");
    
            for (let i in blogs) {
                let next = document.createElement("div");
                let parent = document.createElement("div");
    
                let context = `
                    <div id="${blogs[i]["_id"]}" class="blog">
                        <div class="blog-content">
                            <div class="blog-header">
                                <a href="/read?blogId=${blogs[i]._id}" class="blog-title header-text">${blogs[i]["title"]}</a>
                                <div class="author normal-text">${blogs[i]["author"]}</div>
                            </div>
                            
                            <div class="blog-id normal-text">${blogs[i]["_id"]}</div>
                        </div>
                        <button class="publish-btn" onClick='publishBlog("${blogs[i]["_id"]}")'>Publish</button>
                    </div>
                `;

                next.innerHTML = context;
                parent.append(next);
                elem.append(parent);
            }
        }

        //End of getBlogs() function




        //Search function starts here
        async function searchBlogs() {
        let search = document.getElementById("hero_search").value;
        let token = localStorage.getItem("token");
        let data = await fetch(`/reviews?search=${search}`, {
            method: "GET",
            headers: {
                "Content-type": "application/json",
                'Authorization': "Bearer " + token
            }
        });

        let blogs = await data.json();
        let elem = document.getElementById("in-review");
        elem.innerHTML = "";

        for (let i in blogs.reviews) {
            let next = document.createElement("div");
            let parent = document.createElement("div");

            let context = `
                <div id="${blogs.reviews[i]["_id"]}" class="blog">
                    <div class="blog-content">
                        <div class="blog-header">
                            <a href="/read?blogId=${blogs.reviews[i]._id}" class="blog-title header-text">${blogs.reviews[i]["title"]}</a>
                            <div class="author normal-text">${blogs.reviews[i]["author"]}</div>
                        </div>
                        
                        <div class="blog-id normal-text">${blogs.reviews[i]["_id"]}</div>
                    </div>
                    <button class="publish-btn" onClick='publishBlog("${blogs.reviews[i]["_id"]}")'>Publish</button>
                </div>
            `;

            next.innerHTML = context;
            parent.append(next);
            elem.append(parent);
        }
    }
     
    // End of search function

    

    // function for sorting starts here

        async function sortBlogs() {
            let token = localStorage.getItem("token");
            let sortBy = document.getElementById("filterType").value;
            let data = await fetch(`/allReview?sortBy=${sortBy}`, {
                method: "POST",
                headers: {
                    "Content-type": "application/json",
                    'Authorization': "Bearer " + token
                }
            });

            let blogs = await data.json();
            let elem = document.getElementById("in-review");
            elem.innerHTML = ""; // Clear existing blogs before adding sorted ones

            for (let i in blogs) {
                let next = document.createElement("div");
                let parent = document.createElement("div");

                let context = `
                    <div id="${blogs[i]["_id"]}" class="blog">
                        <div class="blog-content">
                            <div class="blog-header">
                                <a href="/read?blogId=${blogs[i]._id}" class="blog-title header-text">${blogs[i]["title"]}</a>
                                <div class="author normal-text">${blogs[i]["author"]}</div>
                            </div>
                            
                            <div class="blog-id normal-text">${blogs[i]["_id"]}</div>
                        </div>
                        <button class="publish-btn" onClick='publishBlog("${blogs[i]["_id"]}")'>Publish</button>
                    </div>
                `;

                next.innerHTML = context;
                parent.append(next);
                elem.append(parent);
            }
        }
        //End of sort function
    
        getBlogs();
    </script>
</body>
</html>
